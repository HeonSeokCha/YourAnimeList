[versions]
androidStudioGradlePlugin = "8.11.0"

compileSdkVersion = "36"
minSdkVersion = "29"
targetSdkVersion = "35"
versionCode = "1"
versionName = "1.0"

activity = "1.10.1"
compose-ui = "1.8.3"
lifecycle = "2.9.2"
room = "2.7.2"
cashapp-paging = "3.3.0-alpha02-0.5.1"
coil = "3.2.0"
kotlin = "2.2.0"
ksp = "2.2.0-2.0.2"
koin-core = "4.1.0"
koin-annotation = "2.1.0"
kotlin-coroutine = "1.10.2"
ktor = "3.2.2"
apollo = "4.3.1"
compose-plugin = "1.9.0-beta01"
sqlite = "2.5.2"
jetbrin-lifecycle = "2.9.1"

[libraries]
# AndroidX
androidX-core-ktx = "androidx.core:core-ktx:1.16.0"
androidX-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-ui" }
androidX-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity"}
jetbrain-compose-material-icon-extend = "org.jetbrains.compose.material:material-icons-extended:1.7.3"
androidX-compose-material3 = "androidx.compose.material3:material3:1.4.0-alpha18"
androidX-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-ui" }
androidX-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-ui" }
androidX-navigation-compose = "androidx.navigation:navigation-compose:2.9.2"
jetbrain-lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "jetbrin-lifecycle" }
jetbrain-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "jetbrin-lifecycle" }
jetbrain-navigation-compose = "org.jetbrains.androidx.navigation:navigation-compose:2.8.0-alpha13"

room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-runtime-android = { module = "androidx.room:room-runtime-android", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }
cashapp-paging-common = { module = "app.cash.paging:paging-common", version.ref = "cashapp-paging" }
cashapp-paging-compose = { module = "app.cash.paging:paging-compose-common", version.ref = "cashapp-paging" }

## Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin-core"}
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin-core" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-core" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin-core" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin-core" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotation" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotation" }

## Kotlin
kotlin-coroutine-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutine" }
kotlin-coroutine-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin-coroutine" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"

## Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-serialization = {module = "io.ktor:ktor-serialization-kotlinx-json", version.ref="ktor"}
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor"}
ktor-client-content-negotiation = {module = "io.ktor:ktor-client-content-negotiation", version.ref= "ktor"}

## Apollo
apollo-runtime = { module = "com.apollographql.apollo:apollo-runtime", version.ref = "apollo"}
apollo-api = { module = "com.apollographql.apollo:apollo-api", version.ref = "apollo"}
apollo-cache = { module = "com.apollographql.apollo:apollo-http-cache", version.ref = "apollo"}
apollo-ktor = "com.apollographql.ktor:apollo-engine-ktor:0.1.1"

## Coil
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }

junit = "junit:junit:4.13.2"

[bundles]
apollo = [
    "apollo-runtime",
    "apollo-api",
#    "apollo-cache",
    "apollo-ktor"
]

coil = [
    "coil",
    "coil-network-ktor",
    "coil-compose",
    "coil-compose-core"
]
ktor = [
    "ktor-client-core",
    "ktor-client-content-negotiation",
    "ktor-serialization",
    "ktor-logging"
]
koin = [
    "koin-compose",
    "koin-compose-viewmodel",
    "koin-compose-viewmodel-navigation"
]
room = [
    "room-runtime",
    "sqlite-bundled"
]

[plugins]
android-application = { id = "com.android.application", version.ref = "androidStudioGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidStudioGradlePlugin" }
apollo = { id = "com.apollographql.apollo", version.ref = "apollo"}
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
room = { id = "androidx.room", version.ref = "room" }
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "androidStudioGradlePlugin" }